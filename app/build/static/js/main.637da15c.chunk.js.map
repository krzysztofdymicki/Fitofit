{"version":3,"sources":["components/SignForm.js","components/Header.js","components/ActivityForm.js","components/Statistics.js","components/Dashboard.js","services/userService.js","services/signIn.js","components/Main.js","App.js","index.js","utils/dateFunctions.js"],"names":["SignForm","active","setNotification","handleSignIn","handleSignUp","Form","onSubmit","event","preventDefault","username","target","value","password","length","message","color","setTimeout","credentials","FormGroup","Label","for","Input","type","name","id","placeholder","Button","className","Header","handleSignOut","onClick","DatePicker","require","ActivityForm","addActivity","start","startAdress","end","endAdress","date","datepicker","dateFormat","Statistics","activities","period","handlePeriodChange","onChange","checked","Math","round","reduce","a","b","distance","total","_id","Table","bordered","sort","day","map","i","Date","getFullYear","getMonth","getDate","generateStats","Dashboard","getActivities","useState","setPeriod","useEffect","axios","baseURL","token","signUp","post","response","data","setToken","newToken","get","headers","Authorization","newActivity","signIn","Main","user","setUser","setActive","notification","loggedStorageUser","window","localStorage","getItem","JSON","parse","userService","selectActiveClick","signInService","loggedUser","actiivities","setItem","stringify","newActivityToAttach","newDate","newDateTime","getTime","startOfWeek","endOfWeek","concat","removeItem","style","ButtonToggle","size","App","ReactDOM","render","document","getElementById","now","getDay","module","exports"],"mappings":"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","file":"static/js/main.637da15c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap'\r\n\r\nconst SignForm = ({ active, setNotification, handleSignIn, handleSignUp }) => {\r\n  // --- SUBMIT FUNCTION DEPENDING ON THE TYPE OF ACTION (SIGN UP / SIGN IN)\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const username = event.target.username.value\r\n    const password = event.target.password.value\r\n\r\n    if (username.length < 8 || password.length < 8) {\r\n      setNotification({\r\n        message:\r\n          'Both password and username should be at least 8 characters long',\r\n        color: 'red',\r\n      })\r\n      return setTimeout(() => {\r\n        setNotification('')\r\n      }, 5000)\r\n    }\r\n    const credentials = {\r\n      username,\r\n      password,\r\n    }\r\n\r\n    if (active === 'SIGN UP') {\r\n      handleSignUp(credentials)\r\n    } else if (active === 'SIGN IN') {\r\n      handleSignIn(credentials)\r\n    }\r\n  }\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <FormGroup>\r\n        <Label for=\"username\">Username</Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          id=\"username\"\r\n          placeholder=\"min. 8 characters\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"examplePassword\">Password</Label>\r\n        <Input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          id=\"password\"\r\n          placeholder=\"min. 8 characters\"\r\n        />\r\n      </FormGroup>\r\n      <Button\r\n        type=\"submit\"\r\n        color={active === 'SIGN UP' ? 'primary' : 'secondary'}\r\n        className=\"submit-button\"\r\n      >\r\n        {active === 'SIGN UP' ? 'SIGN UP' : 'SIGN IN'}\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SignForm\r\n","import '../styles/Header.css'\r\nimport React from 'react'\r\nimport { Button } from 'reactstrap'\r\n\r\nconst Header = ({ username, handleSignOut }) => {\r\n  return (\r\n    <div id=\"header-container\">\r\n      <p>{username}</p>\r\n      <Button color=\"primary\" onClick={handleSignOut}>\r\n        LOG OUT\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import '../styles/ActivityForm.css'\r\nimport React from 'react'\r\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap'\r\nlet DatePicker = require('reactstrap-date-picker')\r\n\r\nconst ActivityForm = ({ addActivity }) => {\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    addActivity({\r\n      start: event.target.startAdress.value,\r\n      end: event.target.endAdress.value,\r\n      date: event.target.datepicker.value,\r\n    })\r\n    event.target.startAdress.value = ''\r\n    event.target.endAdress.value = ''\r\n  }\r\n  return (\r\n    <Form id=\"activity-form\" onSubmit={handleSubmit}>\r\n      <h3>Add new activity</h3>\r\n      <FormGroup>\r\n        <Label for=\"startAdress\" id=\"start-adress-label\">\r\n          <b>Start adress</b> in format like: \"Plac Europejski 2, Warszawa,\r\n          Polska\"\r\n        </Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"startAdress\"\r\n          id=\"startAdress\"\r\n          placeholder=\"Adress in format: Street nr, city, country\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"endAdress\" id=\"end-adress-label\">\r\n          <b>End adress</b> in format like: \"Plac Europejski 2, Warszawa,\r\n          Polska\"\r\n        </Label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"endAdress\"\r\n          id=\"endAdress\"\r\n          placeholder=\"Adress in format: Street nr, city, country\"\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"datepicker\" id=\"datepicker\">\r\n          <b>Choose the date</b>\r\n        </Label>\r\n        <DatePicker id=\"datepicker\" name=\"datepicker\" dateFormat=\"YYYY-MM-DD\" />\r\n      </FormGroup>\r\n      <br></br>\r\n      <b>Calculate distance and save!</b>\r\n      <br></br>\r\n      <Button color=\"primary\" type=\"submit\">\r\n        GO\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default ActivityForm\r\n","import '../styles/Statistics.css'\r\nimport React from 'react'\r\nimport { Table, Input } from 'reactstrap'\r\n\r\nconst Statistics = ({ activities, period, handlePeriodChange }) => {\r\n\r\n  if (!activities || !activities.length) return null\r\n\r\n  const transformDate = (date) => {\r\n    date = new Date(date)\r\n    return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`\r\n  }\r\n\r\n  const total = (period) => {\r\n    if(period === 'week') {\r\n      return `${Math.round(activities.reduce((a, b) => a + b.distance, 0))} km`\r\n    } else if(period === 'month') {\r\n      return `${Math.round(activities.reduce((a, b) => a + b.total, 0))} km`\r\n    }\r\n  }\r\n\r\n  const generateStats = (period) => {\r\n    if(period === 'month' && activities[0]._id) {\r\n      \r\n      return (<Table bordered id=\"statistics-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Day</th>\r\n          <th>Distance</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {activities.sort((a,b) => a._id.day - b._id.day).map((a,i) => {\r\n          return(<tr key={i}>\r\n            <td>{a._id.day}</td>\r\n            <td>{a.total} km</td>\r\n          </tr>)\r\n      })}\r\n      </tbody>\r\n    </Table>)\r\n       \r\n    } else if(period === 'week') {\r\n      return (\r\n        <Table bordered id=\"statistics-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Start</th>\r\n          <th>End</th>\r\n          <th>Distance</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {activities\r\n      .map((a, i) => (\r\n        <tr key={i}>\r\n          <td>{transformDate(a.date)}</td>\r\n          <td>{a.start}</td>\r\n          <td>{a.end}</td>\r\n          <td>{a.distance} km</td>\r\n        </tr>\r\n      ))}\r\n      </tbody>\r\n    </Table>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"statistics-container\">\r\n       <form onChange={handlePeriodChange}>\r\n          <label for=\"radio-week\">Week</label>\r\n          <input type=\"radio\" name=\"period\" value=\"week\" id=\"radio-week\" checked={period === 'week'}></input>\r\n          <br></br>\r\n          <label for=\"radio-month\">Month</label>\r\n          <input type=\"radio\" name=\"period\" value=\"month\" id=\"radio-month\" checked={period === 'month'}></input>\r\n       </form>\r\n      <h3>{period === \"week\" ? 'This week' : 'This month'}</h3>\r\n      <h4>Total: {total(period)}</h4>\r\n        {generateStats(period)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Statistics\r\n","import '../styles/Dashboard.css'\r\nimport React, { useEffect, useState } from 'react'\r\nimport ActivityForm from './ActivityForm'\r\nimport Statistics from './Statistics'\r\n\r\nconst Dashboard = ({ getActivities, addActivity, activities }) => {\r\n\r\n  const [period, setPeriod] = useState('week')\r\n\r\n  useEffect(() => {\r\n   getActivities(period)\r\n  }, [period])\r\n\r\n  const handlePeriodChange = (event) => {\r\n    setPeriod(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div id=\"dashboard-container\">\r\n      <ActivityForm addActivity={addActivity} />\r\n      <Statistics activities={activities} period={period} handlePeriodChange={handlePeriodChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","const axios = require('axios')\r\nconst baseURL = 'http://localhost:3001/api/users'\r\n\r\n// -- TOKEN USED IN SOME REQUESTS\r\n\r\nlet token = null\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\n// --- CREATE A NEW USER\r\n\r\nconst signUp = async (credentials) => {\r\n  const response = await axios.post(baseURL, credentials)\r\n  return response.data\r\n}\r\n\r\n// -- GET ACTIVITIES OF THE USER\r\n\r\nconst getActivities = async (period) => {\r\n  const response = await axios.get(`${baseURL}/activities/${period}`, {\r\n    headers: { Authorization: token },\r\n  })\r\n  return response.data\r\n}\r\n\r\n// -- ADD A NEW ACTIVITY\r\n\r\nconst addActivity = async (newActivity) => {\r\n  const response = await axios.post(`${baseURL}/activities/`, newActivity, {\r\n    headers: { Authorization: token },\r\n  })\r\n  return response.data\r\n}\r\n\r\nexport default {\r\n  signUp,\r\n  setToken,\r\n  getActivities,\r\n  addActivity,\r\n}\r\n","import axios from 'axios'\r\n\r\nconst url = 'http://localhost:3001/api/signin'\r\n\r\nconst signIn = async (credentials) => {\r\n  const response = await axios.post(url, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default {\r\n  signIn,\r\n}\r\n","import '../styles/Main.css'\r\nimport date from '../utils/dateFunctions'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { ButtonToggle } from 'reactstrap'\r\nimport SignForm from './SignForm'\r\nimport Header from './Header'\r\nimport Dashboard from './Dashboard'\r\nimport userService from '../services/userService'\r\nimport signInService from '../services/signIn'\r\n\r\nconst Main = () => {\r\n  const [user, setUser] = useState({})\r\n  const [active, setActive] = useState('SIGN IN')\r\n  const [notification, setNotification] = useState({ message: '', color: '' })\r\n\r\n  // -- CHECK IF THE USER HAS ALREADY BEEN LOGGED IN --\r\n\r\n  useEffect(() => {\r\n    const loggedStorageUser = window.localStorage.getItem('loggedUser')\r\n    if (loggedStorageUser) {\r\n      const user = JSON.parse(loggedStorageUser)\r\n      setUser(user)\r\n      userService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  // -- HANDLERS --\r\n\r\n  const selectActiveClick = (event) => {\r\n    setActive(event.target.value)\r\n  }\r\n\r\n  const handleSignIn = async (credentials) => {\r\n    try {\r\n      const loggedUser = await signInService.signIn(credentials)\r\n      userService.setToken(loggedUser.token)\r\n      setUser({\r\n        ...loggedUser,\r\n        actiivities: []\r\n      })\r\n      window.localStorage.setItem('loggedUser', JSON.stringify(loggedUser))\r\n    } catch (e) {\r\n      setNotification({\r\n        color: 'red',\r\n        message: 'You passed wrong credentials',\r\n      })\r\n      setTimeout(() => {\r\n        setNotification('')\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleSignUp = async (credentials) => {\r\n    try {\r\n      await userService.signUp(credentials)\r\n      setNotification({\r\n        message: 'New account created, you can now log in',\r\n        color: 'green',\r\n      })\r\n      setTimeout(() => {\r\n        setNotification('')\r\n      }, 5000)\r\n    } catch (e) {\r\n      setNotification({\r\n        message: 'This username is already in use',\r\n        color: 'red',\r\n      })\r\n      setTimeout(() => {\r\n        setNotification('')\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleSignOut = () => {\r\n    userService.setToken(null)\r\n    window.localStorage.removeItem('loggedUser')\r\n    setUser({})\r\n  }\r\n\r\n  const getActivities = async (period) => {\r\n    const activities = await userService.getActivities(period)\r\n    setUser({\r\n      ...user,\r\n      activities: activities.map((a) => {\r\n        return period === \"week\" ? {\r\n          ...a,\r\n          date: new Date(a.date),\r\n        }\r\n        : a\r\n      }),\r\n    })\r\n  }\r\n\r\n  const addActivity = async (newActivity) => {\r\n    try {\r\n      const newActivityToAttach = await userService.addActivity(newActivity)\r\n      if (newActivityToAttach) {\r\n        const newDate = new Date(newActivityToAttach.date)\r\n        const newDateTime = newDate.getTime()\r\n        const startOfWeek = date.startOfWeek().getTime()\r\n        const endOfWeek = date.endOfWeek().getTime()\r\n\r\n        if (newDateTime > startOfWeek && newDateTime < endOfWeek) {\r\n          setUser({\r\n            ...user,\r\n            activities: user.activities.concat({\r\n              ...newActivityToAttach,\r\n              date: new Date(newActivityToAttach.date),\r\n            }),\r\n          })\r\n        }\r\n        setNotification({\r\n          message: `Activity saved. Distance: ${newActivityToAttach.distance} km`,\r\n          color: 'green',\r\n        })\r\n        setTimeout(() => setNotification(''), 5000)\r\n      } else {\r\n        setNotification({\r\n          message: 'Error with last activity',\r\n          color: 'red',\r\n        })\r\n        setTimeout(() => {\r\n          setNotification('')\r\n        }, 5000)\r\n      }\r\n    } catch (e) {\r\n      setNotification({\r\n        message: 'Fill every field and try again',\r\n        color: 'red',\r\n      })\r\n      setTimeout(() => {\r\n        setNotification({\r\n          message: '',\r\n          color: '',\r\n        })\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  // -- WHEN USER IS NOT LOGGED IN, DISPLAY SIGN FORM\r\n\r\n  if (!user.username) {\r\n    return (\r\n      <div id=\"main-sign-container\">\r\n        <h1>Fitofit</h1>\r\n        <div className=\"buttons-container\">\r\n          <ButtonToggle\r\n            color=\"secondary\"\r\n            size=\"lg\"\r\n            value=\"SIGN IN\"\r\n            onClick={selectActiveClick}\r\n          >\r\n            SIGN IN\r\n          </ButtonToggle>\r\n          {'  '}\r\n          <ButtonToggle\r\n            color=\"primary\"\r\n            size=\"lg\"\r\n            value=\"SIGN UP\"\r\n            onClick={selectActiveClick}\r\n          >\r\n            SIGN UP\r\n          </ButtonToggle>\r\n        </div>\r\n        <div id=\"main-forms-container\">\r\n          {notification ? (\r\n            <h5 style={{ color: notification.color }}>\r\n              {notification.message}\r\n            </h5>\r\n          ) : null}\r\n          <SignForm\r\n            active={active}\r\n            setNotification={setNotification}\r\n            handleSignIn={handleSignIn}\r\n            handleSignUp={handleSignUp}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    // -- WHEN USER IS LOGGED IN, DISPLAY USER'S PANEL\r\n\r\n    return (\r\n      <div id=\"main-logged-container\">\r\n        <Header username={user.username} handleSignOut={handleSignOut} />\r\n        <h4 style={{ color: notification.color }} id=\"main-logged-notification\">\r\n          {notification.message}\r\n        </h4>\r\n        <Dashboard\r\n          getActivities={getActivities}\r\n          addActivity={addActivity}\r\n          activities={user.activities}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\nimport Main from './components/Main'\r\n\r\nconst App = () => {\r\n  return (\r\n    <div id=\"home\">\r\n      <Main />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './styles/index.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n","const now = new Date()\r\nconst startOfWeek = () =>\r\n  new Date(now.getFullYear(), now.getMonth(), now.getDate() - now.getDay() + 1)\r\nconst endOfWeek = () =>\r\n  new Date(now.getFullYear(), now.getMonth(), startOfWeek().getDate() + 7)\r\n\r\nmodule.exports = {\r\n  startOfWeek,\r\n  endOfWeek,\r\n}\r\n"],"sourceRoot":""}